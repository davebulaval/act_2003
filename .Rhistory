dataTest <- read.csv('data/Titanic/test.csv', stringsAsFactors = T)
getwd()
setwd("~/GitHub/act_2003")
data <- read.csv('data/Titanic/train.csv', stringsAsFactors = T)
dataTest <- read.csv('data/Titanic/test.csv', stringsAsFactors = T)
dataTrain <- read.csv('data/Titanic/train.csv', stringsAsFactors = T)
full  <- bind_rows(train, test) # bind training & test data
library(dplyr)
full  <- bind_rows(train, test)
full  <- bind_rows(dataTrain, dataTest)
warnings()
View(full)
View(full)
full[factor_vars] <- lapply(full[factor_vars], function(x) as.factor(x))
factor_vars <- c('PassengerId','Pclass','Sex','Embarked',
'Title','Surname','Family','FsizeD')
full[factor_vars] <- lapply(full[factor_vars], function(x) as.factor(x))
dataTest <- read.csv('data/Titanic/test.csv', stringsAsFactors = F)
dataTrain <- read.csv('data/Titanic/train.csv', stringsAsFactors = F)
full  <- bind_rows(dataTrain, dataTest)
factor_vars <- c('PassengerId','Pclass','Sex','Embarked',
'Title','Surname','Family','FsizeD')
full[factor_vars] <- lapply(full[factor_vars], function(x) as.factor(x))
factor_vars <- c('PassengerId','Pclass','Sex','Embarked')
full[factor_vars] <- lapply(full[factor_vars], function(x) as.factor(x))
set.seed(129)
mice_mod <- mice(full[, !names(full) %in% c('PassengerId','Name','Ticket','Cabin','Survived')], method='rf')
library(mice)
mice_mod <- mice(full[, !names(full) %in% c('PassengerId','Name','Ticket','Cabin','Survived')], method='rf')
mice_output <- complete(mice_mod)
par(mfrow=c(1,2))
hist(full$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
hist(mice_output$Age, freq=F, main='Age: MICE Output',
col='lightgreen', ylim=c(0,0.04))
full$Age <- mice_output$Age
full[1:891]
full[1:891,]
full[1:892,]
full[891:893,]
length(full)
length(full$Age)
write.csv(full[1:891,], paste('data/Titanic/train.csv',sep = ""),
row.names = FALSE, fileEncoding = "UTF-8")
write.csv(full[892,length(full$Age)], paste('data/Titanic/train.csv',sep = ""),
row.names = FALSE, fileEncoding = "UTF-8")
dataTest <- read.csv('data/Titanic/test.csv', stringsAsFactors = F)
dataTrain <- read.csv('data/Titanic/train.csv', stringsAsFactors = F)
View(dataTest)
View(dataTest)
dataTest$Age <- full$Age[1:891,]
dataTest$Age
dataTrain$Age <- full$Age[1:891,]
dataTrain$Age
full$Age[1:891,]
full$Age[1:891]
dataTrain$Age <- full$Age[1:891]
dataTest$Age <- full$Age[892:length(full$Age)]
write.csv(dataTest, paste('data/Titanic/train.csv',sep = ""),
row.names = FALSE, fileEncoding = "UTF-8")
dataTest <- read.csv('data/Titanic/test.csv', stringsAsFactors = F)
dataTrain <- read.csv('data/Titanic/train.csv', stringsAsFactors = F)
library(dplyr)
library(mice)
setwd("~/GitHub/act_2003")
dataTest <- read.csv('data/Titanic/test.csv', stringsAsFactors = F)
dataTrain <- read.csv('data/Titanic/train.csv', stringsAsFactors = F)
full  <- bind_rows(dataTrain, dataTest)
factor_vars <- c('PassengerId','Pclass','Sex','Embarked')
full[factor_vars] <- lapply(full[factor_vars], function(x) as.factor(x))
set.seed(129)
mice_mod <- mice(full[, !names(full) %in% c('PassengerId','Name','Ticket','Cabin','Survived')], method='rf')
mice_output <- complete(mice_mod)
par(mfrow=c(1,2))
hist(full$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
hist(mice_output$Age, freq=F, main='Age: MICE Output',
col='lightgreen', ylim=c(0,0.04))
full$Age <- mice_output$Age
dataTrain$Age <- full$Age[1:891]
dataTest$Age <- full$Age[892:length(full$Age)]
write.csv(dataTrain, paste('data/Titanic/train.csv',sep = ""),
row.names = FALSE, fileEncoding = "UTF-8")
write.csv(dataTest, paste('data/Titanic/test.csv',sep = ""),
row.names = FALSE, fileEncoding = "UTF-8")
dataTest <- read.csv('data/Titanic/test.csv', stringsAsFactors = F)
dataTrain <- read.csv('data/Titanic/train.csv', stringsAsFactors = F)
View(dataTest)
View(dataTest)
View(dataTrain)
#
# Code pour la modification du dataset Test
# Ajout de l'état de survie, LogFare et Surname
#
# Modification du dataset Test
setwd("~/GitHub/act_2003")
dataTest <- read.csv('data/Titanic/test.csv', stringsAsFactors = T)
# Ajout surnom
dataTest$Surname <- as.factor(sapply(as.character(dataTest$Name),
function(x) strsplit(x, split = '[,]')[[1]][1]))
# Ajout du Log-Fare
dataTest$LogFare <- log(dataTest$Fare)
dataTest$LogFare[dataTest$LogFare == -Inf] <- 0
# Ajout de l'état de survie ou nom de façon aléatoire
set.seed(2017)
dataTest$Survived <- sample(x = c(0, 1), size = length(dataTest$PassengerId), replace = TRUE)
write.csv(dataTest, paste('data/Titanic/test.csv',sep = ""),
row.names = FALSE, fileEncoding = "UTF-8")
setwd("~/GitHub/act_2003")
data <- read.csv('data/Titanic/train.csv', stringsAsFactors = T)
n <- 25
data <- data[1:n,]
resul <- lm(Age ~ Fare, data)
plot(data$Fare, data$Age, xlab = "Prix du billet ($)", ylab = "Âge du passager", main = "Âge prédit des passagers du Titanic")
abline(resul, col="red2", lwd = 1.5)
epsi <- c(7, 17)
segments(data$Fare[epsi], data$Age[epsi],  data$Fare[epsi], resul$coefficients[1] + resul$coefficients[2]* data$Fare[epsi], col = "gray8")
text( x = (data$Fare[7] + data$Fare[7]) / 2, y = (data$Age[7] +  resul$coefficients[1] + resul$coefficients[2]* data$Fare[7]) / 2, col = "gray8", labels = expression(epsilon[7]), pos = 4, cex = 1)
text( x = (data$Fare[17] + data$Fare[17]) / 2, y = (data$Age[17] +  resul$coefficients[1] + resul$coefficients[2]* data$Fare[17]) / 2, col = "gray8", labels = expression(epsilon[17]), pos = 4, cex = 1)
step(lm(mpg~wt+drat+disp+qsec+hp,data=mtcars),direction="both")
plot(mpg)
models <- step(lm(mpg~wt+drat+disp+qsec+hp,data=mtcars),direction="both")
plot(models)
