arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(1000, 0, 15) + rnorm(100, 0, 4)
y <- runif(1000, 2.5, 5.5) * x/8
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=9),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(1000, 0, 15) + rnorm(100, 0, 4)
y <- runif(1000, 2.5, 5.5) * x/8
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 15) + rnorm(100, 0, 4)
y <- runif(100, 2.5, 5.5) * x/8
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 15) + rnorm(100, 0, 4)
y <- runif(100, 2.5, 5.5) * x/8
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2) +
geom_segment(aes(x=0, xend=15, y=0, yend=6),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 15) + rnorm(100, 0, 4)
y <- runif(100, 2.5, 5.5) * x/8
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2) +
geom_segment(aes(x=0, xend=15, y=0, yend=5),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 15) + rnorm(100, 0, 4)
y <- runif(100, 2.5, 5.5) * x/8
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2) +
geom_segment(aes(x=0, xend=15, y=0, yend=4.5),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 15) + rnorm(100, 0, 4)
y <- runif(100, 2.5, 5.5) * x/8
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=16, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2) +
geom_segment(aes(x=0, xend=15, y=0, yend=4.5),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 15) + rnorm(100, 0, 4)
y <- runif(100, 2.5, 5.5) * x/8
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2) +
geom_segment(aes(x=0, xend=16, y=0, yend=4.5),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(phi^{-1}(expression(epsilon[t]))) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(phi1^{-1}(expression(epsilon[t]))) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(phi1 expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(phi1 epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(phi1 * epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(phi1^{-1} *(epsilon[t])) ) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(phi1^{-1} *(F[epsilon[t]])) ) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(phi1^{-1} *(F[epsilon[t]](epsilon))) ) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=15, y=0, yend=10),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(phi1^{-1} *(F[epsilon[t]]())) ) + coord_cartesian(xlim=c(0, 5), ylim=c(0, 5))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=5, y=0, yend=5),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(phi1^{-1} *(F[epsilon[t]]())) ) + coord_cartesian(xlim=c(0, 5), ylim=c(0, 5))
p
set.seed(2017)
x <- runif(100, 0, 1)
y <- runif(100, 0, 1)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=5, y=0, yend=5),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(phi1^{-1} *(F[epsilon[t]]())) ) + coord_cartesian(xlim=c(0, 5), ylim=c(0, 5))
p
set.seed(2017)
x <- runif(100, 0, 5)
y <- runif(100, 0, 5)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=5, y=0, yend=5),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(phi1^{-1} *(F[epsilon[t]]())) ) + coord_cartesian(xlim=c(0, 5), ylim=c(0, 5))
p
x <- seq(0, 5, 0.5)
y <- c(0.6, 0.9, 1.43, 2.12, 2.5, 3.09, 3.468, 4, 4.5123, 5.05656)
set.seed(2017)
x <- seq(0, 5, 0.5)
y <- c(0.6, 0.9, 1.43, 2.12, 2.5, 3.09, 3.468, 4, 4.5123, 5.05656)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
# Ajout des points
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_curve(aes(x=0, xend=15, y=8, yend=8), curvature = 1,
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2) +
geom_curve(aes(x=0, xend=15, y=5, yend=5), curvature = 1,
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des axes
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
set.seed(2017)
x <- seq(0, 5, 0.5)
y <- c(0, 0.6, 0.9, 1.43, 2.12, 2.5, 3.09, 3.468, 4, 4.5123, 5.05656)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
# Ajout des points
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_curve(aes(x=0, xend=15, y=8, yend=8), curvature = 1,
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2) +
geom_curve(aes(x=0, xend=15, y=5, yend=5), curvature = 1,
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des axes
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(epsilon[t])) + coord_cartesian(xlim=c(0, 15), ylim=c(0, 9))
p
x <- seq(0, 5, 0.5)
y <- c(0, 0.6, 0.9, 1.43, 2.12, 2.5, 3.09, 3.468, 4, 4.5123, 5.05656)
# Ajout graphe
p <- ggplot(data.frame(x=c(0, 15)), aes(x=x))
# Ajout des points
p <- qplot(x, y)
# Ajout des segments
p <- p + geom_segment(aes(x=0, xend=5, y=0, yend=5),
arrow=arrow(length=unit(0,"cm"), angle=180), linetype=2)
# Ajout des points
p <- p + xlab(expression(hat(Y)[t])) + ylab(expression(phi1^{-1} *(F[epsilon[t]]())) ) + coord_cartesian(xlim=c(0, 5), ylim=c(0, 5))
p
dataset <- read.csv("~/GitHub/act_2003/data/Indicatrices/dataset.csv", skip = 1,
header = FALSE, na.strings = c("\\N",""))
dataset
dataset <- read.csv("~/GitHub/act_2003/data/Indicatrices/dataset.csv", skip = 1, ";",
header = FALSE, na.strings = c("\\N",""))
View(dataset)
View(dataset)
levels(dataset)
levels(dataset$V1)
dataset <- read.csv("~/GitHub/act_2003/data/Indicatrices/dataset.csv", skip = 1, ";",
header = FALSE, na.strings = c("\\N",""), stringsAsFactors = TRUE)
levels(dataset$V1)
levels(dataset$V2)
dataset <- read.csv("~/GitHub/act_2003/data/Indicatrices/dataset.csv", skip = 1, ";",
header = FALSE, na.strings = c("\\N",""))
levels(dataset$V2)
summary(dataset)
colnames(dataset) <- c("Y", "Couleurs", "Type", "Emploi")
summary(dataset)
levels(dataset$V2)
reg <- lm()
reg <- lm(Y ~ Couleurs + Type + Emploi, dataset)
summary(reg)
cars
airports <- read.csv("https://raw.githubusercontent.com/
jpatokal/openflights/master/data/airports.dat",
header = FALSE, na.strings = c("\\N",""))
airports <- read.csv("https://raw.githubusercontent.com/jpatokal/openflights/master/data/airlines.dat",
header = FALSE, na.strings = c("\\N",""))
View(airports)
View(airports)
data <- read.csv('data/Titanic/train.csv', stringsAsFactors = F)
data
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
levels(data$Sex
lm(Age ~ Sex)
levels(data$Sex)
data <- read.csv('data/Titanic/train.csv', stringsAsFactors = T)
levels(data$Sex)
lm(Age ~ Sex + SibSp + PClass + Fare + Embarked)
lm(Age ~ Sex + SibSp + PClass + Fare + Embarked, data)
lm(Age ~ Sex + SibSp + Pclass + Fare + Embarked, data)
levels(data$Sex)
head(data)
lm(Age ~ Survived + Sex + SibSp + Pclass + Fare + Embarked, data)
step(lm(Age ~ Survived + Sex + SibSp + Pclass + Fare + Embarked, data), direction = "both")
sumary(data)
summary(data)
data$cabin
data$Cabin
data <- read.csv('data/Titanic/train.csv', stringsAsFactors = T)
summary(data)
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
data$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
data$Title <- gsub('(.*, )|(\\..*)', '', data$Name)
table(data$Sex, data$Title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
data$Title[data$Title == 'Mlle']        <- 'Miss'
data$Title[data$Title == 'Ms']          <- 'Miss'
data$Title[data$Title == 'Mme']         <- 'Mrs'
data$Title[data$Title %in% rare_title]  <- 'Rare Title'
table(data$Sex, data$Title)
data$Surname <- sapply(data$Name,
function(x) strsplit(x, split = '[,.]')[[1]][1])
data$Firstname <- sapply(data$Name,
function(x) strsplit(x, split = "[.]" )[[1]][2])
data$Name
data$Surname <- sapply(data$Name,
function(x) strsplit(x, split = '[,]')[[1]][1])
data <- read.csv('data/Titanic/train.csv', stringsAsFactors = F)
summary(data)
data$Surname <- sapply(as.character(data$Name),
function(x) strsplit(x, split = '[,]')[[1]][1])
data$Surname <- sapply(as.character(data$Name),
function(x) strsplit(x, split = '[,]')[[1]][1])
summary(data$Surname)
data$Surname <- as.factor(sapply(as.character(data$Name),
function(x) strsplit(x, split = '[,]')[[1]][1]))
summary(data$Surname)
head(summary(data$Surname))
step(lm(Age ~ Survived + Pclass + Sex + Fare + Cabin + Embarked + Surname, data), direction = "both")
step(lm(Age ~ Survived + Pclass + Sex + Fare + Cabin + Embarked + Surname, data), direction = "both")
step(lm(Age ~ Survived + Pclass + Sex + Fare + Embarked + Surname, data), direction = "both")
fit <- step(lm(Age ~ Survived + Pclass + Sex + Fare + Embarked + Surname, data), direction = "both")
residuals(fit)
fit$residuals
fit$fitted.values
fit$coefficients
plot(fit)
plot(fit)
plot(fit, caption = "Normal Q-Q")
QQ <- plot(fit)
QQ
qqplot(fit)
qqplot(fit)
plot(lm1, which=c(2,1))
plot(fit, which=c(2,1))
plot(fit, which=1)
plot(fit, which=2)
plot(fit)
fit$coefficients
data$LogFare <- log(data$Fare)
fitL <- step(lm(Age ~ Survived + Pclass + Sex + Fare + Embarked + Surname + LogFare, data), direction = "both")
data$LogFare <- log(data$Fare[!0])
data$LogFare <- log(data$Fare[>0])
data$LogFare <- log(data$Fare[data$Fare>0])
data$LogFare[-Inf]
data$LogFare[Inf]
data$LogFare[data$LogFare == Inf]
data$LogFare <- data$LogFare[data$LogFare == Inf]
data$LogFare[data$LogFare == Inf]
data$LogFare[data$LogFare == -Inf]
data$LogFare[data$LogFare == -Inf] <- 0
fitL <- step(lm(Age ~ Survived + Pclass + Sex + Fare + Embarked + Surname + LogFare, data), direction = "both")
fitL
fitL <- step(lm(Age ~ Survived + Pclass + Sex + Fare + Embarked + Surname + LogFare + Parch, data), direction = "both")
fitL <- step(lm(Age ~ Survived + Pclass + Sex + Fare + Embarked + Surname + LogFare + SibSp, data), direction = "both")
fitL
fitL <- step(lm(Age ~ Survived + Pclass + Sex + Fare + Embarked + Surname + LogFare, data), direction = "both")
fitL
dataTest <- read.csv('data/Titanic/test.csv', stringsAsFactors = T)
predict(dataTest, fitL)
predict(fitL, dataTest)
View(dataTest)
View(dataTest)
fitL <- step(lm(Age ~ = Pclass + Sex + Fare + Embarked + Surname + LogFare, data), direction = "both")
fitL
fitL <- step(lm(Age ~  Pclass + Sex + Fare + Embarked + Surname + LogFare, data), direction = "both")
fitL
fitL <- step(lm(Age ~ Survived + Pclass + Sex + Fare + Embarked + Surname + LogFare, data), direction = "both")
fitL
fit <- step(lm(Survived ~ Age + Pclass + Sex + Fare + Embarked + Surname, data), direction = "both")
fit
data$Surname <-sapply(as.character(data$Name),
function(x) strsplit(x, split = '[,]')[[1]][1])
fit <- step(lm(Survived ~ Age + Pclass + Sex + Fare + Embarked + Surname, data), direction = "both")
fit
fit <- step(lm(Survived ~ Age + Pclass + Sex + Fare + Embarked + Surname, data), direction = "both")
fit$residuals
plot(fitL, which=2)
fit <- step(lm(Survived ~ Pclass + Sex + Age+ Fare + Embarked + Surname, data), direction = "both")
fit
fit <- step(lm(Survived ~ Pclass + Sex + Age+ Fare + Embarked + Surname, data), direction = "both")
plot(fit, which=2)
fit <- step(lm(Survived ~ Pclass + Sex + Age + Cabin + Fare + Embarked + Surname, data), direction = "both")
fit <- step(lm(Survived ~ Pclass + Sex + Age + Fare + Embarked + Surname, data), direction = "both")
plot(fit, which=2)
fit <- step(lm(Survived ~ Pclass + Sex + Age + Cabin + Fare + Embarked + Surname, data), direction = "both")
plot(fit, which=2)
fit <- step(lm(Survived ~ Pclass + Sex + Age + SibSp + Cabin + Fare + Embarked + Surname, data), direction = "both")
plot(fit, which=2)
View(data)
View(data)
dataTest$Surname <- as.factor(sapply(as.character(data$Name),
function(x) strsplit(x, split = '[,]')[[1]][1]))
dataTest$Surname <- as.factor(sapply(as.character(dataTest$Name),
function(x) strsplit(x, split = '[,]')[[1]][1]))
dataTest$LogFare <- log(dataTest$Fare)
dataTest$LogFare[dataTest$LogFare == -Inf] <- 0
dataTest$Survived <- sample(x = (0, 1), size = length(dataTest))
dataTest$Survived <- sample(x = c(0, 1), size = length(dataTest))
?sample
dataTest$Survived <- sample(x = c(0, 1), size = length(dataTest), replace = TRUE)
dataTest
dataTest$PassengerId
length(dataTest$PassengerId)
dataTest$Survived <- sample(x = c(0, 1), size = length(dataTest$PassengerId), replace = TRUE)
set.seed(2017)
dataTest$Survived <- sample(x = c(0, 1), size = length(dataTest$PassengerId), replace = TRUE)
sum(data$Survived)
sum(dataTest$Survived)
set.seed(20171212121)
dataTest$Survived <- sample(x = c(0, 1), size = length(dataTest$PassengerId), replace = TRUE)
set.seed(2017)
set.seed(2016)
dataTest$Survived <- sample(x = c(0, 1), size = length(dataTest$PassengerId), replace = TRUE)
sum(data$Survived)
sum(dataTest$Survived)
set.seed(2017)
dataTest$Survived <- sample(x = c(0, 1), size = length(dataTest$PassengerId), replace = TRUE)
write.csv(dataTest, paste('data/Titanic/test.csv',sep = ""),
row.names = FALSE, fileEncoding = "UTF-8")
dataTest <- read.csv('data/Titanic/test.csv', stringsAsFactors = T)
predict(fitL, dataTest)
head(predict(fitL, dataTest))
step(lm(Age ~ Survived + Pclass + Sex + Fare + Embarked + Surname + LogFare, dataTest), direction = "both")
plot(fit)
plot(fit, which=2)
data$LogFare <- log(data$Fare)
data$LogFare[data$LogFare == -Inf] <- 0
fitL <- step(lm(Age ~ Survived + Pclass + Sex + Fare + Embarked + Surname + LogFare, data), direction = "both")
data$Surname <- as.factor(sapply(as.character(data$Name),
function(x) strsplit(x, split = '[,]')[[1]][1]))
fit <- step(lm(Age ~ Survived + Pclass + Sex + Fare + Embarked + Surname, data), direction = "both")
fit
install.packages("scatterplot3d")
